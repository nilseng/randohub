{"version":3,"sources":["images/synshorn.jpg","images/mugnetind.jpg","images/rasletind.jpg","utils/history.js","react-auth0-spa.js","components/PrivateRoute.js","components/NavBar.js","components/Profile.js","components/Feed.js","components/Summits.js","components/BucketList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","createBrowserHistory","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Auth0Provider","children","onRedirectCallback","initOptions","useState","isAuthenticated","setIsAuthenticated","user","setUser","auth0Client","setAuth0","loading","setLoading","popupOpen","setPopupOpen","useEffect","a","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","initAuth0","loginWithPopup","params","console","error","Provider","value","getIdTokenClaims","loginWithRedirect","getTokenSilently","getTokenWithPopup","logout","PrivateRoute","Component","component","path","rest","targetUrl","fn","render","props","NavBar","Navbar","bg","variant","expand","collapseOnSelect","Brand","style","color","href","backgroundColor","padding","borderRadius","icon","faMountain","marginRight","Toggle","className","aria-controls","outline","Collapse","id","Nav","Link","Item","Button","onClick","Profile","src","picture","alt","name","email","JSON","stringify","Feed","width","minHeight","Container","Card","margin","maxWidth","Img","rasletind_img","paddingBottom","Title","Body","synshorn_img","mugnetind_img","mockSummits","height","rating","Summits","summits","forEach","summit","log","map","BucketList","App","exact","Boolean","hostname","match","ReactDOM","domain","process","REACT_APP_AUTH0_DOMAIN","config","client_id","REACT_APP_AUTH0_CLIENT_ID","clientId","redirect_uri","origin","push","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.156f5c15.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/synshorn.c1c458c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mugnetind.7816eba8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rasletind.add6f425.jpg\";","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","// src/react-auth0-spa.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n  children,\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  ...initOptions\n}) => {\n  const [isAuthenticated, setIsAuthenticated] = useState();\n  const [user, setUser] = useState();\n  const [auth0Client, setAuth0] = useState();\n  const [loading, setLoading] = useState(true);\n  const [popupOpen, setPopupOpen] = useState(false);\n\n  useEffect(() => {\n    const initAuth0 = async () => {\n      const auth0FromHook = await createAuth0Client(initOptions);\n      setAuth0(auth0FromHook);\n\n      if (\n        window.location.search.includes(\"code=\") &&\n        window.location.search.includes(\"state=\")\n      ) {\n        const { appState } = await auth0FromHook.handleRedirectCallback();\n        onRedirectCallback(appState);\n      }\n\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n      setIsAuthenticated(isAuthenticated);\n\n      if (isAuthenticated) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n\n      setLoading(false);\n    };\n    initAuth0();\n    // eslint-disable-next-line\n  }, []);\n\n  const loginWithPopup = async (params = {}) => {\n    setPopupOpen(true);\n    try {\n      await auth0Client.loginWithPopup(params);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setPopupOpen(false);\n    }\n    const user = await auth0Client.getUser();\n    setUser(user);\n    setIsAuthenticated(true);\n  };\n\n  const handleRedirectCallback = async () => {\n    setLoading(true);\n    await auth0Client.handleRedirectCallback();\n    const user = await auth0Client.getUser();\n    setLoading(false);\n    setIsAuthenticated(true);\n    setUser(user);\n  };\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        popupOpen,\n        loginWithPopup,\n        handleRedirectCallback,\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n        logout: (...p) => auth0Client.logout(...p),\n      }}\n    >\n      {children}\n    </Auth0Context.Provider>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n  useEffect(() => {\n    if (loading || isAuthenticated) {\n      return;\n    }\n    const fn = async () => {\n      await loginWithRedirect({\n        appState: { targetUrl: window.location.pathname },\n      });\n    };\n    fn();\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n  const render = (props) =>\n    isAuthenticated === true ? <Component {...props} /> : null;\n\n  return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon as FaIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMountain } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nimport \"../styles/NavBar.scss\";\n\nconst NavBar = () => {\n  const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" collapseOnSelect>\n      <Navbar.Brand style={{ color: \"#f8f9fa\" }} href=\"/\">\n        <span\n          style={{\n            backgroundColor: \"#f8f9fa\",\n            padding: \"0.4rem\",\n            borderRadius: \"0.1rem\",\n            color: \"black\",\n          }}\n        >\n          <FaIcon\n            icon={faMountain}\n            style={{ marginRight: \"0.4rem\", color: \"#343a40\" }}\n          ></FaIcon>\n          Randohub\n        </span>\n      </Navbar.Brand>\n      <Navbar.Toggle\n        className=\"mb-2\"\n        aria-controls=\"basic-navbar-nav\"\n        style={{ outline: \"none\" }}\n      />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        <Nav>\n          <Nav.Link href=\"/bucketlist\">Bucket List</Nav.Link>\n          <Nav.Link href=\"/summits\">Summits</Nav.Link>\n          {!isAuthenticated && (\n            <Nav.Item>\n              <Button\n                variant=\"link\"\n                className=\"mr-2\"\n                onClick={() => loginWithRedirect({})}\n              >\n                Log In\n              </Button>\n            </Nav.Item>\n          )}\n          {isAuthenticated && (\n            <>\n              <Nav.Item>\n                <Nav.Link href=\"/profile\">Profile</Nav.Link>\n              </Nav.Item>\n              <Nav.Link className=\"mr-2\" onClick={() => logout()}>\n                Log out\n              </Nav.Link>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\n\nconst Profile = () => {\n  const { loading, user } = useAuth0();\n\n  if (loading || !user) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <img src={user.picture} alt=\"Profile\" />\n\n      <h2>{user.name}</h2>\n      <p>{user.email}</p>\n      <code>{JSON.stringify(user, null, 2)}</code>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\n\nimport synshorn_img from \"../images/synshorn.jpg\";\nimport mugnetind_img from \"../images/mugnetind.jpg\";\nimport rasletind_img from \"../images/rasletind.jpg\";\n\nconst Feed = () => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        minHeight: \"100vh\",\n        backgroundColor: \"black\",\n      }}\n    >\n      <Container style={{ padding: \"1rem 0\" }}>\n        <Card\n          style={{\n            padding: \"1rem\",\n            margin: \"1rem 0\",\n            width: \"27rem\",\n            maxWidth: \"100%\",\n          }}\n          bg=\"dark\"\n        >\n          <Card.Img\n            src={rasletind_img}\n            style={{ width: \"100%\", paddingBottom: \"1rem\" }}\n          />\n          <Card.Title style={{ color: \"#f8f9fa\" }}>Rasletind 2105</Card.Title>\n          <Card.Body style={{ color: \"#f8f9fa\" }}>\n            Det var sol og nice\n          </Card.Body>\n        </Card>\n        <Card\n          style={{\n            padding: \"1rem\",\n            margin: \"1rem 0\",\n            width: \"27rem\",\n            maxWidth: \"100%\",\n          }}\n          bg=\"dark\"\n        >\n          <Card.Img\n            src={synshorn_img}\n            style={{ width: \"100%\", paddingBottom: \"1rem\" }}\n          />\n          <Card.Title style={{ color: \"#f8f9fa\" }}>Synshorn 1475</Card.Title>\n          <Card.Body style={{ color: \"#f8f9fa\" }}>\n            Det regnet og var nice\n          </Card.Body>\n        </Card>\n        <Card\n          style={{\n            padding: \"1rem\",\n            margin: \"1rem 0\",\n            width: \"27rem\",\n            maxWidth: \"100%\",\n          }}\n          bg=\"dark\"\n        >\n          <Card.Img\n            src={mugnetind_img}\n            style={{ width: \"100%\", paddingBottom: \"1rem\" }}\n          />\n          <Card.Title style={{ color: \"#f8f9fa\" }}>Mugnetind 1740</Card.Title>\n          <Card.Body style={{ color: \"#f8f9fa\" }}>\n            Det regnet ikke og var nice\n          </Card.Body>\n        </Card>\n      </Container>\n    </div>\n  );\n};\n\nexport default Feed;\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\n\nconst mockSummits = [\n  {\n    name: \"Rasletind\",\n    height: 2105,\n    rating: 10,\n  },\n  {\n    name: \"Mugnetind\",\n    height: 1750,\n    rating: 5,\n  },\n  {\n    name: \"Mount Everest\",\n    height: 8848,\n    rating: 6,\n  },\n];\n\nconst Summits = () => {\n  const summits = mockSummits;\n  summits.forEach((summit) => console.log(summit));\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        minHeight: \"100vh\",\n        backgroundColor: \"black\",\n      }}\n    >\n      <Container style={{ padding: \"1rem 0\" }}>\n        {summits &&\n          summits.map((summit) => (\n            <Card\n              style={{\n                padding: \"1rem\",\n                margin: \"1rem 0\",\n                width: \"27rem\",\n                maxWidth: \"100%\",\n                color: \"#f8f9fa\",\n              }}\n              bg=\"dark\"\n            >\n              <Card.Title>{summit.name}</Card.Title>\n              <Card.Body>\n                <div>Height: {summit.height}</div>\n                <div>Rating: {summit.rating}</div>\n              </Card.Body>\n            </Card>\n          ))}\n      </Container>\n    </div>\n  );\n};\n\nexport default Summits;\n","import React from \"react\";\n\nconst BucketList = () => {\n  return (\n    <ul>\n      <li>Galdhøpiggen 2469</li>\n      <li>Denali 6190</li>\n      <li>K2 8611</li>\n    </ul>\n  );\n};\n\nexport default BucketList;\n","import React from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport history from \"../utils/history\";\n\nimport PrivateRoute from \"./PrivateRoute\";\nimport NavBar from \"./NavBar\";\nimport Profile from \"./Profile\";\nimport Feed from \"./Feed\";\nimport Summits from \"./Summits\";\nimport BucketList from \"./BucketList\";\n\nfunction App() {\n  return (\n    <>\n      <Router history={history}>\n        <header>\n          <NavBar />\n        </header>\n        <Switch>\n          <Route path=\"/\" exact component={Feed} />\n          <Route path=\"/summits\" component={Summits} />\n          <PrivateRoute path=\"/profile\" component={Profile} />\n          <PrivateRoute path=\"/bucketlist\" component={BucketList} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport config from \"./auth_config.json\";\nimport history from \"./utils/history\";\n\n// A function that routes the user to the right place\n// after login\nconst onRedirectCallback = (appState) => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={process.env.REACT_APP_AUTH0_DOMAIN || config.domain}\n    client_id={process.env.REACT_APP_AUTH0_CLIENT_ID || config.clientId}\n    redirect_uri={window.location.origin}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}